import React, { useState, useRef, useEffect } from 'react'
import { useSelector, useDispatch } from 'react-redux'
import { GLOBALTYPES } from '../../../redux/actions/globalTypes';
 import { createPostSmartphone,updatePostSmartphone } from '../../../redux/actions/categoriesAction/telephones/smartphone';

  

import communesjson from "../../../json/communes.json"
import modelosjson from "../../../json/telefonos.json"
import { imageShow, videoShow } from '../../../utils/mediaShow'

import Slider from 'rc-slider';
import 'rc-slider/assets/index.css';  // Importar los estilos predeterminados

import { FormCheck } from 'react-bootstrap';


const Smartphone = () => {
    const { auth, theme, socket, statusTelephoneReducer } = useSelector((state) => state);
    const { smartphone } = statusTelephoneReducer
    const dispatch = useDispatch();

    // Un estado combinado para subCategorieSmartphone y Smartphone
    const [telephoneData, setTelephoneData] = useState({
        subCategorieSmartphone: '',
        referencia: '',
        marca: '',
        modelo: '',
        copie: '',
        memoire: '',
        color: '',
        os: '',
        appareil: '',
        camerafrontal: '',
        talleecran: '',
        ram: '',
        gigas: '',
        doublepuces: '',         // Array para almacenar imágenes cargadas

        description: '',
        price: '',
        unidaddeprecio: '',
        oferta: '',
        change: '',
        wilaya: '',
        commune: '',
        quartier: '',
        email: '',
        contadordevisitas: '',
        informacion: '',
        comentarios: '',
        duraciondelanuncio: '',


    });
    const [images, setImages] = useState([]);
    const [selectedWilaya, setSelectedWilaya] = useState([]);
    const [selectedCommune, setSelectedCommune] = useState([]);
    const [selectedMarca, setSelectedMarca] = useState([]);
    const [selectedModelo, setSelectedModelo] = useState([]);
    const [stream, setStream] = useState(false);
    const videoRef = useRef();
    const refCanvas = useRef();
    const [tracks, setTracks] = useState('');
    const handleMarcaChange = (event) => {
        const selectedMarca = event.target.value;
        setSelectedMarca(selectedMarca);

        const marcaEncontrada = modelosjson.find((marca) => marca.marca === selectedMarca);
        const modelos = marcaEncontrada && marcaEncontrada.commune ? marcaEncontrada.commune : [];

        if (modelos.length > 0) {
            setSelectedModelo(modelos[0]);
        } else {
            setSelectedModelo('');
        }
    };

    const handleModeloChange = (event) => {
        setSelectedModelo(event.target.value);
    };






    const handleWilayaChange = (event) => {
        const selectedWilaya = event.target.value;
        setSelectedWilaya(selectedWilaya);

        const wilayaEncontrada = communesjson.find((wilaya) => wilaya.wilaya === selectedWilaya);
        const communes = wilayaEncontrada && wilayaEncontrada.commune ? wilayaEncontrada.commune : [];

        if (communes.length > 0) {
            setSelectedCommune(communes[0]);
        } else {
            setSelectedCommune('');
        }
    };

    const handleCommuneChange = (event) => {
        setSelectedCommune(event.target.value);
    };

    const wilayasOptions = communesjson.map((wilaya, index) => (
        <option key={index} value={wilaya.wilaya}>
            {wilaya.wilaya}
        </option>
    ));

    const communesOptions = communesjson.find((wilaya) => wilaya.wilaya === selectedWilaya)?.commune?.map((commune, index) => (
        <option key={index} value={commune}>
            {commune}
        </option>
    ));
    const marcasOptions = modelosjson.map((marca, index) => (
        <option key={index} value={marca.marca}>
            {marca.marca}
        </option>
    ));

    const modelosOptions = modelosjson.find((marca) => marca.marca === selectedMarca)?.modelo?.map((modelo, index) => (
        <option key={index} value={modelo}>
            {modelo}
        </option>
    ));





    const handleChangeImages = e => {
        const files = [...e.target.files];
        let err = '';
        let newImages = [];

        files.forEach(file => {
            if (!file) return (err = 'File does not exist.');

            if (file.size > 1024 * 1024 * 5) {
                return (err = 'The image/video largest is 5mb.');
            }

            return newImages.push(file);
        });

        if (err) dispatch({ type: GLOBALTYPES.ALERT, payload: { error: err } });
        setImages([...images, ...newImages]);
    };

    const deleteImages = index => {
        const newArr = [...images];
        newArr.splice(index, 1);
        setImages(newArr);
    };

    const handleStream = () => {
        setStream(true);
        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
            navigator.mediaDevices
                .getUserMedia({ video: true })
                .then(mediaStream => {
                    videoRef.current.srcObject = mediaStream;
                    videoRef.current.play();

                    const track = mediaStream.getTracks();
                    setTracks(track[0]);
                })
                .catch(err => console.log(err));
        }
    };

    const handleCapture = () => {
        const width = videoRef.current.clientWidth;
        const height = videoRef.current.clientHeight;

        refCanvas.current.setAttribute('width', width);
        refCanvas.current.setAttribute('height', height);

        const ctx = refCanvas.current.getContext('2d');
        ctx.drawImage(videoRef.current, 0, 0, width, height);
        let URL = refCanvas.current.toDataURL();
        setImages([...images, { camera: URL }]);
    };

    const handleStopStream = () => {
        tracks.stop();
        setStream(false);
    };

    const handleSubmit = e => {
        e.preventDefault();
        if (images.length === 0)
            return dispatch({
                type: GLOBALTYPES.ALERT,
                payload: { error: 'Please add your photo.' },
            });

        if (smartphone.onEdit) {
            dispatch(updatePostSmartphone({ telephoneData, images, auth, smartphone }));
        } else {
            dispatch(createPostSmartphone({ telephoneData, images, auth, socket }));
        }

        setTelephoneData(telephoneData);
        setImages([]);
        if (tracks) tracks.stop();
        dispatch({ type: GLOBALTYPES.SMARTPHONE, payload: false });
    };

    useEffect(() => {
        if (smartphone.onEdit) {

            setTelephoneData({
                subCategorieSmartphone: smartphone.subCategorieSmartphone || "",
                referencia: smartphone.referencia || "",
                marca: smartphone.marca || "",
                modelo: smartphone.etage || "",

                copie: smartphone.copie || "",
                memoire: smartphone.memoire || "",

                color: smartphone.color || "",
                os: smartphone.os || "",
                appareil: smartphone.appareil || "",
                camerafrontal: smartphone.camerafrontal || "",
                talleecran: smartphone.talleecran || "",

                ram: smartphone.ram || "",
                gigas: smartphone.gigas || "",
                doublepuces: smartphone.doublepuces || "",




                description: smartphone.description || "",
                price: smartphone.price || "",
                unidaddeprecio: smartphone.unidaddeprecio || "",
                oferta: smartphone.oferta || "",
                change: smartphone.change || "",
                wilaya: smartphone.wilaya || "",
                commune: smartphone.commune || "",
                quartier: smartphone.quartier || "",
                email: smartphone.email || "",
                telefono: smartphone.telefono || "",
                contadordevisitas: smartphone.contadordevisitas || "",
                informacion: smartphone.informacion || "",
                comentarios: smartphone.comentarios || "",
 
            });
            setImages(smartphone.images || []); // Asegurar imágenes



        }
    }, [smartphone]);




    const handleChangeInput = (e, customValue = null) => {
        if (customValue !== null) {
            // Si customValue está definido, lo usamos directamente (para sliders)
            const name = e; // El primer argumento es el nombre del campo
            setTelephoneData({ ...telephoneData, [name]: customValue });
        } else {
            // Para eventos normales
            const { name, value, type, checked } = e.target;
            if (type === 'checkbox') {
                setTelephoneData({ ...telephoneData, [name]: checked });
            } else {
                setTelephoneData({ ...telephoneData, [name]: value });
            }
        }
    };
    return (
        <div className="status_modal">



            <form onSubmit={handleSubmit}>



                <div className="status_header">
                    <h5 className="m-0"> Créer une annonce Smartphone </h5>
                    <span onClick={() => dispatch({ type: GLOBALTYPES.SMARTPHONE, payload: false })}>&times;</span>
                </div>
                <div className="status_body">

                    <br></br>
                    <div className="form-group">
                        <label className="text-primary">Smartphone:</label>
                        <input
                        className='form-control'
                            type="text"
                            name="subCategorieSmartphone"
                            value={telephoneData.subCategorieSmartphone}
                            onChange={handleChangeInput}
                            placeholder= "Smartphone"
                            readOnly
                        />
                    </div>




                    <div>
                        <div className="form-group">
                            <label className="text-primary">Référence:</label>
                            <input
                                type="text"
                                name="referencia"
                                value={telephoneData.referencia}
                                onChange={handleChangeInput}
                                className="form-control"
                                placeholder='Référence'

                            />
                        </div>
                        <div className="form-group">
                            <label className="text-primary">Marque:</label>
                            <select multiple={false}
                                className="form-control"
                                name="Marca"
                                value={selectedMarca}
                                onChange={handleMarcaChange}
                                required
                            >
                                <option value="">Seleccioner la Marque</option>
                                {marcasOptions}
                            </select>
                            <small className='text-danger'>Ce champ est requis</small>
                        </div>

                        <div className="form-group">
                            <label className="text-primary">Modèle:</label>
                            <select
                                multiple={false}
                                className="form-control"
                                name="modelo"
                                value={selectedModelo}
                                onChange={handleModeloChange}
                                required
                            >
                                <option value="">Seleccioner le Modèle</option>
                                {modelosOptions}
                            </select>
                            <small className='text-danger'>Ce champ est requis</small>
                        </div>

                        <div className="form-group">
                            <label className="text-primary">Copie:</label>
                            <select
                                multiple={false}
                                name="copie"
                                value={telephoneData.copie}
                                onChange={handleChangeInput}
                                className="form-control"
                            >
                                <option value="Original">Original</option>
                                <option value="Reconditionné">Reconditionné</option>
                                <option value="Copie Chinois">Copie Chinois</option>
                            </select>
                        </div>

                        <div className="form-group">
                            <label className="text-primary">Mémoire:</label>
                            <select
                                multiple={false}
                                name="memoire"
                                value={telephoneData.memoire}
                                onChange={handleChangeInput}
                                className="form-control"
                            >
                                <option value="256 GO">256 GO</option>
                                <option value="128 GO">128 GO</option>
                                <option value="64 GO">64 GO</option>
                                <option value="32 GO">32 GO</option>
                                <option value="16 GO">16 GO</option>
                            </select>
                        </div>


                        <div className="form-group">
                            <label className="text-primary">Couleurs:</label>
                            <select multiple={false}
                                name="color"
                                value={telephoneData.color}
                                onChange={handleChangeInput}
                                className="form-control"
                            >
                                <option value="Blanc">Blanc</option>
                                <option value="Noir">Noir</option>
                                <option value="Doré">Doré</option>
                                <option value="Argenté">Argenté</option>
                                <option value="Bleu">Bleu</option>
                                <option value="Rouge">Rouge</option>
                                <option value="Vert">Vert</option>
                                <option value="Rose">Rose</option>
                                <option value="Gris">Gris</option>
                                <option value="Jaune">Jaune</option>
                                <option value="Violet">Violet</option>
                                <option value="Autre">Autre</option>
                            </select>
                        </div>



                        <div className="form-group">
                            <label className='text-primary'  >OS/Android:</label>
                            <select
                                multiple={false}
                                name="os"
                                value={telephoneData.os}
                                onChange={handleChangeInput}
                                className="form-control"
                            >
                                <option value="IOS">IOS</option>
                                <option value="Android">Android</option>
                                <option value="Windows Phon">Windows Phone</option>
                                <option value="BlackBerry">BlackBerry</option>
                            </select>
                        </div>


                        <div className="form-group">
                            <label className='text-primary'  >Appareil photo:</label>
                            <input
                                type="text"
                                name="appareil"
                                value={telephoneData.appareil}
                                onChange={handleChangeInput}
                                className="form-control"
                                placeholder='En Mégapixel'

                            />
                        </div>

                        <div className="form-group">
                            <label className="text-primary">Caméra Frontale:</label>
                            <input
                                type="text"
                                name="camerafrontal"
                                value={telephoneData.camerafrontal}
                                onChange={handleChangeInput}
                                className="form-control"
                                placeholder='En Mégapixel'

                            />
                        </div>
                        <div className="form-group">
                            <label className="text-primary">Talle écran:</label>
                            <input
                                type="text"
                                name="talleecran"
                                value={telephoneData.talleecran}
                                onChange={handleChangeInput}
                                className="form-control"
                                placeholder='Talle écran'

                            />
                        </div>

                        <div className="form-group">
                            <label className="text-primary">RAM:</label>
                            <select
                                multiple={false}
                                name="ram"
                                value={telephoneData.ram}
                                onChange={handleChangeInput}
                                className="form-control"
                            >
                                <option value="1 GO">1 GO</option>
                                <option value="2 GO">2 GO</option>
                                <option value="3 GO">3 GO</option>
                                <option value="4 GO">4 GO</option>
                                <option value="5 GO">5 GO</option>
                                <option value="6 GO">6 GO</option>
                                <option value="7 GO">7 GO</option>
                                <option value="8 GO">8 GO</option>
                                <option value="9 GO">9 GO</option>
                                <option value="10 GO">10 GO</option>
                                <option value="14 GO">14 GO</option>
                                <option value="16 GO">16 GO</option>
                                <option value="32 GO">32 GO</option>
                                <option value="64 GO">64 GO</option>
                                <option value="256 GO">256 GO</option>
                                <option value="512 GO">512 GO</option>
                                <option value="128 MO">128 MO</option>
                                <option value="256 MO">256 MO</option>
                                <option value="512 MO">512 MO</option>
                            </select>
                        </div>
                        <div className="form-group">
                            <label className='text-primary'>3G/4G:</label>
                            <select
                                multiple={false}
                                name="gigas"
                                value={telephoneData.gigas}
                                onChange={handleChangeInput}
                                className="form-control"
                            >
                                <option value="Avaic 3G">Avaic 3G</option>
                                <option value="Avaic 4G">Avaic 4G</option>

                            </select>
                        </div>



                        <div className="form-group">
                            <label className='text-primary'  >Double puces:</label>
                            <select
                                multiple={false}
                                name="doublepuces"
                                value={telephoneData.doublepuces}
                                onChange={handleChangeInput}
                                className="form-control"
                            >
                                <option value="Avec double puces">Avec double puces</option>
                                <option value="Sans double puces">Une seul puce</option>
                            </select>
                        </div>

                    </div>




                    <div className="form-group">

                        <textarea name="description" value={telephoneData.description}
                            onChange={handleChangeInput}
                            placeholder='Description...'
                        />
                    </div>
                    <div className="card-body form-group">
                        <label className="text-primary">Prix  </label>
                        <div style={{ padding: '0 20px' }}>
                            <Slider
                                min={500}
                                max={2000000}
                                step={500}
                                value={telephoneData.price || 0} // Si no hay precio, el slider empieza en 0
                                onChange={(value) => handleChangeInput('price', value)} // Usamos customValue
                                trackStyle={{ backgroundColor: '#44EB00', height: 10 }}
                                handleStyle={{
                                    borderColor: '#00AF72',
                                    height: 20,
                                    width: 20,
                                    marginLeft: -10,
                                    marginTop: -5,
                                    backgroundColor: '#007bff',
                                }}
                                railStyle={{ backgroundColor: '#ccc', height: 10 }}
                            />
                        </div>
                        <div style={{ marginTop: 10 }}>
                            {telephoneData.price}
                        </div>
                    </div>

                    <div className="form-group">

                        <select
                            multiple={false}
                            name="unidaddeprecio"
                            value={telephoneData.unidaddeprecio}
                            onChange={handleChangeInput}
                            className="form-control"
                        >
                            <option  >Unité de prix</option>
                            <option value="DA">DA</option>
                            <option value="Millions">Millions</option>
                            <option value="Milliard">Milliard</option>
                            <option value="DA (m²)">DA (m²)</option>
                            <option value="Millions (m²) ">Millions (m²)</option>

                        </select>
                    </div>

                    <div className="form-group">

                        <select
                            multiple={false}
                            name="oferta"
                            value={telephoneData.oferta}
                            onChange={handleChangeInput}
                            className="form-control"
                        >
                            <option >Type D'offre</option>
                            <option value="Fixe">Fixe</option>
                            <option value="Négociable">Négociable</option>
                            <option value="Offert">Offert</option>

                        </select>
                    </div>

                    <div className="form-group">

                        <select
                            multiple={false}
                            name="change"
                            value={telephoneData.change}
                            onChange={handleChangeInput}
                            className="form-control"
                        >
                            <option  >Change</option>

                            <option value="J'accepte l'échange">J'accepte l'échange</option>
                            <option value="Pas d'échanges">Pas d'échanges </option>

                        </select>
                    </div>


                    <div className="form-group">
                        <small className='text-primary'>Adresse du bien obligatoire</small>
                        <select
                            multiple={false}
                            className="form-control"
                            name="wilaya"
                            value={selectedWilaya}
                            onChange={handleWilayaChange}

                        >
                            <option value="">Sélectionnez une wilaya</option>
                            {wilayasOptions}
                        </select>
                        <small className='text-danger'>Ce champ est requis</small>
                    </div>


                    <div className="form-group">

                        <select
                            multiple={false}
                            className="form-control"
                            name="commune"
                            value={selectedCommune}
                            onChange={handleCommuneChange}

                        >
                            <option value="">Sélectionnez la commune</option>
                            {communesOptions}
                        </select>
                        <small className='text-danger'>Ce champ est requis</small>
                    </div>


                    <div className="form-group">

                        <input onChange={handleChangeInput} value={telephoneData.quartier} name="quartier" type="text" className="form-control" placeholder='Quartier' />

                    </div>

                    <div className="form-group">

                        <input onChange={handleChangeInput} value={telephoneData.telefono} name="telefono" type="number" className="form-control" placeholder='Téléphone' />

                    </div>


                    <div className="form-group">

                        <input onChange={handleChangeInput} value={telephoneData.email} name="email" type="email" className="form-control" placeholder='Adresse mail ' />

                    </div>



                    <div>
                        <label className="text-primary">Options Générales</label>
                        <div className="form-group">
                            <FormCheck
                                type="checkbox"
                                checked={telephoneData.contadordevisitas}
                                onChange={(e) => setTelephoneData({ ...telephoneData, contadordevisitas: e.target.checked })}
                                label="Afficher lo compteur des visites"
                            />
                        </div>
                        <div className="form-group">
                            <FormCheck
                                type="checkbox"
                                checked={telephoneData.informacion}
                                onChange={(e) => setTelephoneData({ ...telephoneData, informacion: e.target.checked })}
                                label="Autoriser les informations de contact"
                            />
                        </div>

                        <div className="form-group">
                            <FormCheck
                                type="checkbox"
                                checked={telephoneData.comentarios}
                                onChange={(e) => setTelephoneData({ ...telephoneData, comentarios: e.target.checked })}
                                label="Activer les commentaires"
                            />
                        </div>
                        <div className="form-group">
                            <label className="text-primary">Durée de l' annonces</label>
                            <select
                                multiple={false}
                                onChange={handleChangeInput} value={telephoneData.duraciondelanuncio} name="duraciondelanuncio" className="form-control" >

                                <option value="nepasdesactiver">Ne pas désactiver</option>
                                <option value="15 jour">15 Jours</option>
                                <option value="1 mois">1 Mois</option>
                                <option value="3 mois">3 Mois</option>
                                <option value="6 mois">6 Mois</option>

                            </select>
                        </div>


                    </div>





                    <div className="show_images">


                        {
                            images.map((img, index) => (
                                <div key={index} id="file_img">
                                    {
                                        img.camera ? imageShow(img.camera, theme)
                                            : img.url
                                                ? <>
                                                    {
                                                        img.url.match(/video/i)
                                                            ? videoShow(img.url, theme)
                                                            : imageShow(img.url, theme)
                                                    }
                                                </>
                                                : <>
                                                    {
                                                        img.type.match(/video/i)
                                                            ? videoShow(URL.createObjectURL(img), theme)
                                                            : imageShow(URL.createObjectURL(img), theme)
                                                    }
                                                </>
                                    }
                                    <span onClick={() => deleteImages(index)}>&times;</span>
                                </div>
                            ))
                        }
                    </div>

                    {
                        stream &&
                        <div className="stream position-relative">
                            <video autoPlay muted ref={videoRef} width="100%" height="100%"
                                style={{ filter: theme ? 'invert(1)' : 'invert(0)' }} />

                            <span onClick={handleStopStream}>&times;</span>
                            <canvas ref={refCanvas} style={{ display: 'none' }} />
                        </div>
                    }

                    <div className="input_images">
                        {
                            stream
                                ? <i className="fas fa-camera" onClick={handleCapture} />
                                : <>
                                    <i className="fas fa-camera" onClick={handleStream} />

                                    <div className="file_upload">
                                        <i className="fas fa-image" />
                                        <input type="file" name="file" id="file"
                                            multiple accept="image/*,video/*" onChange={handleChangeImages} />
                                    </div>
                                </>
                        }


                    </div>

                </div>

                <div className="status_footer">
                    <button className="btn btn-secondary w-100" type="submit">
                        Post
                    </button>
                </div>

            </form>
        </div>

    )
}




export default Smartphone
